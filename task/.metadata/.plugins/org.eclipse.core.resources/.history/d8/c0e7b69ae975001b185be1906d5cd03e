package backend_challenge.starter.kafka;

import java.util.HashMap;
import java.util.Map;

import org.apache.kafka.clients.consumer.ConsumerConfig;
import org.apache.kafka.clients.producer.ProducerConfig;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.kafka.annotation.KafkaListener;
import org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory;
import org.springframework.kafka.core.ConsumerFactory;
import org.springframework.kafka.core.DefaultKafkaConsumerFactory;
import org.springframework.kafka.core.KafkaTemplate;
import org.springframework.stereotype.Service;

import com.fasterxml.jackson.databind.JsonSerializer;

@Service
public class KafkaSender {

	@Autowired
	private KafkaTemplate<String, Message> kafkaTemplate;
	
	@Bean
    public ConsumerFactory<String, Message> consumerFactory() {
        Map<String, Object> props = new HashMap<>();
        props.put(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, "localhost:9092");
        props.put(ConsumerConfig.GROUP_ID_CONFIG, "groupId");
        props.put(
  	          ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, 
  	          JsonSerializer.class);
       
        return new DefaultKafkaConsumerFactory<>(props);
    }
	
	
	@Bean
    public ConcurrentKafkaListenerContainerFactory<String, Message> 
      kafkaListenerContainerFactory() {
   
        ConcurrentKafkaListenerContainerFactory<String, Message> factory =
          new ConcurrentKafkaListenerContainerFactory<>();
        factory.setConsumerFactory(consumerFactory());
        return factory;
    }
    
	@Bean
	public KafkaTemplate<String, Message> greetingKafkaTemplate() {
	    return kafkaTemplate;
	}

    @KafkaListener(topics = "NewTopic", groupId = "groupId")
    public void listenGroupFoo(String emp,String state) {
        System.out.println("Received Message from tpoic: " + message.getEmployeeName()+" "+message.getState());
       // services.changeStatus(empName, state);
        
    }
	
	
	String kafkaTopic = "NewTopic";
	
	public void send(String employeeName , String state) {
	    
	    kafkaTemplate.send(kafkaTopic, new Message(employeeName, state));
	}
}
