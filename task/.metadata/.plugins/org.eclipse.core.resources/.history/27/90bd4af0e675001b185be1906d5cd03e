package backend_challenge.starter.kafka;

import java.io.UnsupportedEncodingException;
import java.util.Map;

import org.apache.kafka.common.errors.SerializationException;
import org.apache.kafka.common.serialization.Deserializer;

public class Message implements Deserializer<Message>{

	private String EmployeeName;
	private String state;
	
	public Message() {
		
	}
	
	public Message(String employeeName, String state) {
		EmployeeName = employeeName;
		this.state = state;
	}
	public String getEmployeeName() {
		return EmployeeName;
	}
	public void setEmployeeName(String employeeName) {
		EmployeeName = employeeName;
	}
	public String getState() {
		return state;
	}
	public void setState(String state) {
		this.state = state;
	}

	@Override
	public void configure(Map<String, ?> configs, boolean isKey) {
		String propertyName = isKey ? "key.deserializer.encoding" : "value.deserializer.encoding";
        Object encodingValue = configs.get(propertyName);
        if (encodingValue == null)
            encodingValue = configs.get("deserializer.encoding");
        
		
	}

	@Override
	public Message deserialize(String topic, byte[] data) {
        try {
            if (data == null)
                return null;
            else
                return new Message();
        } catch (UnsupportedEncodingException e) {
            throw new SerializationException("Error when deserializing byte[] to string due to unsupported encoding ");
        }
	}

	@Override
	public void close() {
		// TODO Auto-generated method stub
		
	}
	
	
	
}
